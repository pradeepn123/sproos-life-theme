{{ 'bundle-product-tabs.css' | asset_url | stylesheet_tag }}

{%- style -%}
  .color-background{
      background-color: {{ section.settings.color_scheme }}
  }
  .section-{{ section.id }}-padding {
      padding-top: 0;
      padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
      .section-{{ section.id }}-padding {
          padding-top: {{ section.settings.padding_top }}px;
          padding-bottom: {{ section.settings.padding_bottom }}px;
      }
  }
{%- endstyle -%}

{% assign main_pro = product.metafields.custom.product_view_details_info.value %}
{% if main_pro %}
  <div class="section-bundle-pro color-background section-{{ section.id }}-padding" id="bundle-tab-section" data-section-parent>
    <div class="page-width">
      <div class="tab_section__heading">
        <p>Select product to view details</p>
      </div>
      <div class="tab main__tab_section desktop-view">
        <div class="tab__list main__tab_section_wrap">
          {% for main_pro_value in main_pro %}
            {% assign selected_product = main_pro_value.select_product.value %}
            <div class="tab__item">
              {{ selected_product.featured_image | img_url: '100x100' | img_tag: selected_product.featured_image.alt }}
              <h4>{{ selected_product.title }}</h4>
            </div>
          {% endfor %}
        </div>
        <div class="tab__content">
          {% for main_pro_value in main_pro %}
            <div class="tab__content-item tab">
              <div class="tab__list">
                {% assign pro_details = main_pro_value.product_details_info.value %}
                {% for pro_details_wrap in pro_details %}
                  <div class="tab__item">{{ pro_details_wrap.title }}</div>
                {% endfor %}
              </div>
              <div class="tab__content">
                {% assign pro_details = main_pro_value.product_details_info.value %}
                {% for pro_details_wrap in pro_details %}
                  <div class="tab__content-item">{{ pro_details_wrap.description_details | metafield_tag }}</div>
                {% endfor %}
              </div>
            </div>
          {% endfor %}
        </div>
      </div>
      <div class="main__accordion_section mobile-view" data-tab-parent>
        <div class="accordion_section_wrap">
          {% for main_pro_value in main_pro %}
            {% assign selected_product = main_pro_value.select_product.value %}
            <div class="accordion__item {% if forloop.first %}is__active{% endif %}" data-tab-trigger data-index={{ forloop.index0 }}>
                {{ selected_product.featured_image | img_url: '100x100' | img_tag: selected_product.featured_image.alt }}
                <h4>{{ selected_product.title }}</h4>
            </div>
          {% endfor %}
        </div>
        <div class="accordion_section_accords">
          {% for main_pro_value in main_pro %}
            {% assign pro_details = main_pro_value.product_details_info.value %}
            <div class="main-content accordion__block {% if forloop.first %}is__active{% endif %}" data-tab-content data-index={{ forloop.index0 }}>
              {% for pro_details_wrap in pro_details %}
                <div class="accordion__block-item" data-accordion-parent>
                  <div class="description-title accordion accordion__block-item-header" data-accordion-trigger>{{ pro_details_wrap.title }}</div>
                  <div class="description accordion__block-item-content" data-accordion-content>{{ pro_details_wrap.description_details | metafield_tag }}</div>
                </div>
              {% endfor %}
            </div>
          {% endfor %}
        </div>
      </div>
    </div>
  </div>
{% endif %}

<script>
 
  function initializeTabs() {
    const tabs = document.querySelectorAll('.tab');
    function tabify(tab) {
      const tabList = tab.querySelector('.tab__list');
      if (tabList) {
        const tabItems = [...tabList.children];
        const tabContent = tab.querySelector('.tab__content');
        const tabContentItems = [...tabContent.children];
        let tabIndex = 0;
        tabIndex = tabItems.findIndex((item, index) => {
          return [...item.classList].indexOf('is--active') > -1;
        });
        tabIndex > -1 ? (tabIndex = tabIndex) : (tabIndex = 0);

        function setTab(index) {
          tabItems.forEach((x, index) => x.classList.remove('is--active'));
          tabContentItems.forEach((x, index) => x.classList.remove('is--active'));

          tabItems[index].classList.add('is--active');
          tabContentItems[index].classList.add('is--active');
        }

        tabItems.forEach((x, index) => x.addEventListener('click', () => setTab(index)));
        setTab(tabIndex);
        tab.querySelectorAll('.tab').forEach((tabContent) => tabify(tabContent));
      }
    }
    tabs.forEach(tabify);
  }
  document.addEventListener('DOMContentLoaded', function () {
    initializeTabs();
  });
</script>

{% schema %}
{
  "name": "Bundle Product Tabs",
  "tag": "section",
  "class": "section",
  "settings": [
    {
      "type": "paragraph",
      "content": "t:sections.product-recommendations.settings.paragraph__1.content"
    },
    {
      "type": "color",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label"
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 36
    }
  ],
  "presets": [
    {
      "name": "Bundle Product Tabs"
    }
  ]
}
{% endschema %}
